plugins {
    id 'java'
    id 'application'
}

sourceCompatibility = 1.8

group 'org.example'
version '1.0-SNAPSHOT'

repositories {
    mavenCentral()
}

ext {
    picoCliVersion = '4.1.4'
    scalarDLClientSDKVersion = '3.6.0'
}

dependencies {
    implementation group: 'com.scalar-labs', name: 'scalardl-java-client-sdk', version: "${scalarDLClientSDKVersion}"
    implementation group: 'info.picocli', name: 'picocli', version: "${picoCliVersion}"
}

task CertificateRegistration(type: CreateStartScripts) {
    mainClass = 'com.scalar.dl.client.tool.CertificateRegistration'
    applicationName = 'register-cert'
    outputDir = new File(project.buildDir, 'tmp')
    classpath = jar.outputs.files + project.configurations.runtimeClasspath
}

task ContractRegistration(type: CreateStartScripts) {
    mainClass = 'com.scalar.dl.client.tool.ContractRegistration'
    applicationName = 'register-contract'
    outputDir = new File(project.buildDir, 'tmp')
    classpath = jar.outputs.files + project.configurations.runtimeClasspath
}

task FunctionRegistration(type: CreateStartScripts) {
    mainClass = 'com.scalar.dl.client.tool.FunctionRegistration'
    applicationName = 'register-function'
    outputDir = new File(project.buildDir, 'tmp')
    classpath = jar.outputs.files + project.configurations.runtimeClasspath
}

task ContractExecution(type: CreateStartScripts) {
    mainClass = 'com.scalar.dl.client.tool.ContractExecution'
    applicationName = 'execute-contract'
    outputDir = new File(project.buildDir, 'tmp')
    classpath = jar.outputs.files + project.configurations.runtimeClasspath
}

task ContractsListing(type: CreateStartScripts) {
    mainClass = 'com.scalar.dl.client.tool.ContractsListing'
    applicationName = 'list-contracts'
    outputDir = new File(project.buildDir, 'tmp')
    classpath = jar.outputs.files + project.configurations.runtimeClasspath
}

applicationDistribution.into('bin') {
    from(CertificateRegistration)
    from(ContractRegistration)
    from(FunctionRegistration)
    from(ContractExecution)
    from(ContractsListing)
    fileMode = 0755
}
